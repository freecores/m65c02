AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                 Page    1
--------------------------------------------------------- m65c02_tst5.a65 ---------------------------------------------------------

---------------------------------------------------------- Symbol Table -----------------------------------------------------------

              Symbol   Value        Decimal

          BROM_Start : $f800          63488
          Delay_Loop : $f807          63495
           Delay_Lp1 : $f80b          63499
           Delay_Lp2 : $f80f          63503
          Last_Addrs : $f820          63520
              SPI_CR : $f7ff          63487
               Start : $f800          63488
          ZP_Cntr_Hi : $00ff            255
          ZP_Cntr_Lo : $00fe            254
         ZP_LED_Cntr : $00fd            253
          __65SC02__ : $0001              1

11 labels used

59 lines read, no errors in pass 1.
AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                 Page    2
--------------------------------------------------------- m65c02_tst5.a65 ---------------------------------------------------------

f800 =                       BROM_Start  equ     $F800
                             
f7ff =                       SPI_CR      equ     $F7FF
                             
00fd =                       ZP_LED_Cntr equ     $00FD
00fe =                       ZP_Cntr_Lo  equ     $00FE
00ff =                       ZP_Cntr_Hi  equ     $00FF
                             
                                         bss
                             ;;
0000 =                       Zero_Page:  org     $0000
                             ;;
0100 =                       Stack_Page: org     $0100
                             ;;
0200 =                       RAM_Start:  org     $0200
                             ;;
                                         code
f800 =                                   org     BROM_Start
                             ;;
f800 : a900             [ 2] Start:      lda     #$00            ;; load initial value to control register
f802 : 85fd             [ 3]             sta     ZP_LED_Cntr
f804 : 8dfff7           [ 4]             sta     SPI_CR          ;; update LEDs
                             ;;
f807 : a004             [ 2] Delay_Loop: ldy     #$04            ;; load outer delay loop counter
f809 : 84ff             [ 3]             sty     ZP_Cntr_Hi
                             ;;
f80b : a200             [ 2] Delay_Lp1:  ldx     #$00            ;; load inner delay loop counter
f80d : 86fe             [ 3]             stx     ZP_Cntr_Lo
                             ;;
                             ;Delay_Lp2:  dex                     ;; decrement inner loop counter
f80f : c6fe             [ 5] Delay_Lp2:  dec     ZP_Cntr_Lo      ;; decrement inner loop counter
f811 : d0fc             [ 3]             bne     Delay_Lp2       ;; loop until inner loop counter is zero
                             ;;
                             ;            dey                     ;; decrement external loop counter
f813 : c6ff             [ 5]             dec     ZP_Cntr_Hi
f815 : d0f4             [ 3]             bne     Delay_Lp1       ;; loop until outer loop counter is zero
                             ;;
                             ;            dec     a               ;; decrement accumulator
f817 : c6fd             [ 5]             dec     ZP_LED_Cntr
f819 : a5fd             [ 3]             lda     ZP_LED_Cntr
f81b : 8dfff7           [ 4]             sta     SPI_CR          ;; update LEDs
                             
f81e : 80e7             [ 3]             bra     Delay_Loop      ;; Loop Continously
                             ;;
                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             ;;
f820 :                       Last_Addrs:
                             ;;
                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             ;;
                             ;;  Vector Table
                             ;;
fffa =                       Vect_Table: org     $FFFA
                             ;;
fffa : 00f8                              dw      Start       ;; NMI Interrupt Vector
AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                 Page    3
--------------------------------------------------------- m65c02_tst5.a65 ---------------------------------------------------------

fffc : 00f8                              dw      Start       ;; Reset Vector
fffe : 00f8                              dw      Start       ;; IRQ/BRK Interrupt Vector
                             ;;
fffa =                                   end     Start
                             
No errors in pass 2.
Wrote binary from address $f800 through $ffff.
Total size 2048 bytes.
Program start address is at $f800 (63488).
